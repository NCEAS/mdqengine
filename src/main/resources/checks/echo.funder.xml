<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
	<id>check.echo.funder.1</id>
	<name>Funder</name>
	<description>Check for extracting funder from the metadata for result indexing and analysis.</description>
	<type>identification</type>
	<level>METADATA</level>
	<environment>rscript</environment>
	<code><![CDATA[
	library(stringr)
	NSFawardLength <- 7
if (is.null(awards)) {
  status <- "SUCCESS"
  output <- "NA"
  mdq_result <- list(status = status,
                     output = list(list(value = output)))
} else {
  status <- "SUCCESS"
    awards <- trimws(gsub("nsf award", "", tolower(awards)))
  # Extract the integer funding numbers from any other character left in the 'funding' element.
  awards <- str_extract(awards, "\\d+")
  # Make sure that all award numbers are the correct number of characters
  # The number may have been stripped of leading zeros, so add them back
  # in if necessary.
  awardFormat <- paste0("%0", NSFawardLength, "d")
  awards <- lapply(awards, function(x) {
    award <- x
    if(nchar(x) < NSFawardLength) {
        award <- sprintf(awardFormat, as.integer(x))
    }
    as.character(award)
  })
  mdq_result <- list(status = status,
                     output = lapply(awards, function(message) {
                     message <- str_trim(message, side = c("both", "left", "right"))
                     list(value = message)}))
}]]></code>
	<selector>
		<name>awards</name>
		<xpath>/*[local-name() = 'eml']/dataset/project/funding//text()[normalize-space()]</xpath>
	</selector>
</mdq:check>