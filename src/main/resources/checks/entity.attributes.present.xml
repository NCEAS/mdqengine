<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="https://nceas.ucsb.edu/mdqe ../schemas/schema1.xsd">
	<id>check.entity.attributes.present.1</id>
	<name>Check that an each entity has a name and attributes.</name>
	<description>Check that each data entity has attributes.</description>
	<type>interpretation</type>
	<level>OPTIONAL</level>
	<environment>rscript</environment>
	<code><![CDATA[
	
check <- function() {
  library(base)
  library(metadig)
  # variables defined by MQE from the <xpath> selectors.
  # "entityName" - the names of each data entity
  # "entityType" - the type of data entity, e.g. "dataTable", "spatialVector", etc.
  # "entityAttributesPresent" - the names of each data entity
  
  outputList <- list()
  # Assume that the check will succeed, until proven otherwise.
  # The dataset may have multiple entities, so check each one. 
  status <- "SUCCESS"
  if (length(entityName) > 0) {
    for(iEntity in 1:length(entityName)) {
      thisEntityType <- entityType[[iEntity]]
      # Check entityName is defined for current entity
      if(isDefined("entityName", entityName, iEntity)) {
        thisEntityName <- sprintf("%s", entityName[[iEntity]])
      } else {
        thisEntityName <- sprintf("%d", iEntity)
      }

      if(!entityAttributesPresent[[iEntity]]) {
        outputList[[length(outputList)+1]] <- list(value=sprintf("The %s '%s' does not have attributes defined.", thisEntityType, thisEntityName))
      }
    }
  } else {
      # No data entities were selected by the xpath, so tell the user no check was performed.
      outputList[[length(outputList)+1]] <- list(value=sprintf("No data entities are present, so uanble to check for attributes."))
      return(list(status="SKIP", values=outputList))
  }
  
  # If no output was set, then the check passed, otherwise have to check for SKIP or FAILURE
  if(length(outputList) > 0) {
    return(list(status="FAILURE", values=outputList))
  } else {
    return(list(status="SUCCESS", values=list(list(value=sprintf("All %s data entities have attributes defined.", length(entityName))))))
  }
}

result <- check()
mdq_result <- list(status=result$status, output=result$values) 
]]></code>

	<!-- Don't need a subSelector for entityName, as this is required, 
		so their won't be entities that are selected that don't have this value, 
		and therefor no 'blank' values. -->
	<selector>
		<name>entityName</name>
		<xpath>/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]</xpath>
		<subSelector>
			<name>entityNameSubSelector</name>
			<xpath>./entityName</xpath>
		</subSelector>
	</selector>
	<selector>
		<name>entityType</name>
		<xpath>name(/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity])</xpath>
	</selector>
	<selector>
		<name>entityAttributesPresent</name>
		<xpath>/eml/dataset/*[self::dataTable|self::spatialRaster|self::spatialVector|self::storedProcedure|self::view|self::otherEntity]</xpath>
		<subSelector>
			<name>entityAttributesSubSelector</name>
			<xpath>boolean(./attributeList/attribute)</xpath>
		</subSelector>
	</selector>
	<dialect>
		<name>eml</name>
		<xpath>boolean(/*[local-name() = 'eml'])</xpath>
	</dialect>
</mdq:check>
