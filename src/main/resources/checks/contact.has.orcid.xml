<?xml version="1.0" encoding="UTF-8"?>
<mdq:check xmlns:mdq="https://nceas.ucsb.edu/mdqe/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://nceas.ucsb.edu/mdqe/v1 ../schemas/schema1.xsd">
	<id>check.contact.has.orcid.1</id>
	<name>Contact information with ORCID</name>
	<description>Contact should contain an ORCID, email, and address.</description>
	<type>identification</type>
	<level>INFO</level>
	<environment>rscript</environment>
	<code><![CDATA[
  check <- function() {
    # These variables are defined by the MQE from the <xpath> selectors.
    # "contactPresent" - is the dataset contact present
    # "userId"         - the dataset contact/userId
    # "emailPresent"   - the contact email
    # "addressPresent" - the contact address

    if (!contactPresent) {
      return(list(status = "FAILURE",
                  output = "A contact is not present, so unable to check for an ORCID, email, or address."))
    }

    # Assume that the check will succeed, until proven otherwise
    status <- "SUCCESS"
    # The output messages will be gathered into a list
    values <- list()

    # There could be multiple contacts, but just one contact with a 'userId' will satisfy this check
    if (is.null(userId)) {
      # Should this be a SKIP?
      status <- "FAILURE"
      values[[length(values) + 1]] <- list(value = "A user identifier for any contact is not present, so unable to check for an ORCID.")
    } else {
      # contact/userId is present, so check if it is an ORCID
      hasORCID <- grepl("^\\s*http(s)?://(dx\\.)?doi\\.org/(doi:)?10\\..+", userId, perl = TRUE) || grepl("^\\s*doi:10\\..+", userId, perl = TRUE)
      if (hasORCID) {
        values[[length(values) + 1]] <- list(value = "The user identifier for a contact is an ORCID.")
      } else {
        status <- "FAILURE"
        values[[length(values) + 1]] <- list(value = "The user identifier for any contact is not an ORCID.")
      }
    }

    # There could be multiple contacts, but just one contact with an 'email' will satisfy this check
    if (emailPresent) {
      values[[length(values) + 1]] <- list(value = "An email address for a contact is present.")
    } else {
      status <- "FAILURE"
      values[[length(values) + 1]] <- list(value = "An email address for any contact is not present.")
    }

    # There could be multiple contacts, but just one contact with an 'address' will satisfy this check
    if (addressPresent) {
      values[[length(values) + 1]] <- list(value = "An address for a contact is present.")
    } else {
      status <- "FAILURE"
      values[[length(values) + 1]] <- list(value = "An address for any contact is not present.")
    }

    return(list(status = status,
                values = values))
  }

  result <- check()

  mdq_result <- list(status = result$status,
                     output = result$values)
  ]]></code>
  <selector>
		 <name>contactPresent</name>
		 <xpath>boolean(/*[local-name() = 'eml']/dataset/contact)</xpath>
	 </selector>
  <selector>
		 <name>userId</name>
		 <xpath>/*[local-name() = 'eml']/dataset/contact/userId</xpath>
	 </selector>
  <selector>
		 <name>emailPresent</name>
		 <xpath>boolean(/*[local-name() = 'eml']/dataset/contact/electronicMailAddress)</xpath>
	 </selector>
  <selector>
		 <name>addressPresent</name>
		 <xpath>boolean(/*[local-name() = 'eml']/dataset/contact/address)</xpath>
	 </selector>
	 <dialect>
		 <name>eml</name>
		 <xpath>boolean(/*[local-name() = 'eml'])</xpath>
	 </dialect>
</mdq:check>
